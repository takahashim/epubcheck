single_file=File is validated as a single file of type %1$s and version %2$s. Only a subset of the available tests is run.
opv_version_test=*** Candidate for msg deletion *** Tests are performed only for the OPF version.
mode_version_not_supported=The checker doesn't validate type %1$s and version %2$s.

no_errors__or_warnings=No errors or warnings detected.
there_were_errors=\nCheck finished with errors\n
there_were_warnings=\nCheck finished with warnings\n

error_processing_unexpanded_epub=\nThis check cannot process expanded epubs\n
deleting_archive=\nEpub creation cancelled due to detected errors.\n
display_help=-help displays help
argument_needed=At least one argument expected
version_argument_expected=Version number omitted from the -version argument.
mode_argument_expected=Type omitted from the -mode argument.
no_file_specified=No file specified in the arguments. Exiting.
mode_version_ignored=The mode and version arguments are ignored for epubs. They are retrieved from the files.
mode_required=Mode required for non-epub files. Default version is 3.0.
validating_version_message=Validating using EPUB version %1$s rules.
output_type_conflict=Only one output format can be specified at a time.

help_text = \
          nookepubcheck v.%1$s\n\
          When running this tool, the first argument should be the name (with the path)\n\
          of the file to check.\n\
          \n\
          If checking a non-epub file, the epub version of the file must\n\
           be specified using -v and the type of the file using -mode.\n\
           The default version is: 3.0.\n\
          \n\
          Modes and versions supported: \n\
          --mode opf -v 2.0\n\
          --mode opf -v 3.0\n\
          --mode xhtml -v 2.0\n\
          --mode xhtml -v 3.0\n\
          --mode svg -v 2.0\n\
          --mode svg -v 3.0\n\
          --mode nav -v 3.0\n\
          --mode mo  -v 3.0 // For Media Overlays validation\n\
          --mode exp  // For expanded EPUB archives\n\
          \n\
          This tool also accepts the following options:\n\
          --save 	         = saves the epub created from the expanded epub\n\
          --out <file>     = output an assessment XML document file.\n\
          --json <file>    = output an assessment JSON document file\n\
          -m <file>        = same as --mode\n\
          -o <file>        = same as --out\n\
          -j <file>        = same as --json\n\
          --failonwarnings[+|-] = By default, the tool returns a 1 if errors are found in the file or 0 if no errors\n\
          \                        are found.  Using --failonwarnings will cause the process to exit with a status of\n\
          \                        1 if either warnings or errors are present and 0 only when there are no errors or warnings.\n\
          -f, --fatal      = include only fatal errors in the output\n\
          -e, --error      = include only error and fatal severity messages in ouput\n\
          -w, --warn       = include fatal, error, and warn severity messages in output\n\
          -u, --usage      = include ePub feature usage information in output\n\
          \                    (default is OFF); if enabled, usage information will\n\
          \                    always be included in the output file\n\
          \n\
          -l, --listChecks [<file>] = list message ids and severity levels to the custom message file named <file>\n\
          \                          or the console\n\
          -c, --customMessages [<file>] = override message severity levels as defined in the custom message file named <file>\n\
          \n\
          -h, -? or --help = displays this help message\n

